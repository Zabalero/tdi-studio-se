<%@ jet
imports="
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.designer.codegen.config.CodeGeneratorArgument
	java.util.List
"
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String accessKey = ElementParameterParser.getValue(node, "__ACCESS_KEY__");

	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	boolean isSpecifyprojectID=("true").equals(ElementParameterParser.getValue(node,"__SPECIFY_PROJECT__"));
	String projectID=ElementParameterParser.getValue(node,"__PROJECT_ID__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));

	String authType = ElementParameterParser.getValue(node, "__AUTH_TYPE__");
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");

  if(("true").equals(useExistingConn)) {
		List< ? extends INode> nodes =  node.getProcess().getNodesOfType("tGSConnection");
		for (INode ne : nodes) {
			if (connection.equals(ne.getUniqueName())) {
				authType = ElementParameterParser.getValue(ne, "__AUTH_TYPE__");
        break;
			}
		}
	}
%>
	int nb_bucket_<%=cid%> = 0;

<%
if ("USER_ACCOUNT_HMAC".equals(authType)){
%>
	org.jets3t.service.model.GSBucket[] buckets_<%=cid%> = new org.jets3t.service.model.GSBucket[] {};
	org.jets3t.service.impl.rest.httpclient.GoogleStorageService service_<%=cid%> = null;
	<%
	if(("true").equals(useExistingConn)) {
		%>
		service_<%=cid%> = (org.jets3t.service.impl.rest.httpclient.GoogleStorageService)globalMap.get("service_<%=connection%>");
		<%
		if(isLog4jEnabled){
		%>
			log.info("<%=cid%> - Get an free connection from " + "<%=connection%>" + ".");
		<%
		}
	}else{
	%>
	try {

       <%
       String passwordFieldName = "__SECRET_KEY__";
       final String GoogleTracker = org.talend.core.utils.TrackerUtil.getGoogleTracker();
       %>

	   <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

		org.jets3t.service.security.GSCredentials credentials_<%=cid%> = new org.jets3t.service.security.GSCredentials(<%=accessKey%>,decryptedPassword_<%=cid%>);

		service_<%=cid%> = new org.jets3t.service.impl.rest.httpclient.GoogleStorageService(credentials_<%=cid%>," <%=GoogleTracker%>",null);
		service_<%=cid%>.getAccountOwner();
	<%
	}
	if(isSpecifyprojectID){
	%>
		buckets_<%=cid%>=service_<%=cid%>.listAllBuckets(<%=projectID%>);
	<%
	}else{
	%>
		buckets_<%=cid%>=service_<%=cid%>.listAllBuckets();
	<%
	}
	%>
	for (org.jets3t.service.model.GSBucket bucket_<%=cid%> : buckets_<%=cid%>) {
		nb_bucket_<%=cid%>++;
		String currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();
		globalMap.put("<%=cid%>_CURRENT_BUCKET_NAME", currentBucketName_<%=cid%>);
<% } else {
  String gsProjectID=ElementParameterParser.getValue(node,"__GS_PROJECT_ID__");
  String dieOnError = "false";
%>
	<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/googleStorageConnection.javajet"%>
	com.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();

	for (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) {
		String currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();
		globalMap.put("<%=cid%>_CURRENT_BUCKET_NAME", currentBucketName_<%=cid%>);
		nb_bucket_<%=cid%>++;
<%
}
%>