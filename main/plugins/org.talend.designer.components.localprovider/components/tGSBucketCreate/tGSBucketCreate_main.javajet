<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	"
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String accessKey = ElementParameterParser.getValue(node, "__ACCESS_KEY__");

	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	boolean isSpecialConfig=("true").equals(ElementParameterParser.getValue(node,"__SPECIAL_CONFIGUER__"));
	String bucketName=ElementParameterParser.getValue(node,"__BUCKET__");
	String projectID=ElementParameterParser.getValue(node,"__PROJECT_ID__");
	String location = ElementParameterParser.getValue(node,"__LOCATION__");
	String locationForServiceAccount = ElementParameterParser.getValue(node,"__LOCATION_FOR_SERVICE_ACCOUNT__");
	String acl = ElementParameterParser.getValue(node,"__ACL__");
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	String authType = ElementParameterParser.getValue(node, "__AUTH_TYPE__");
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");

	if(("true").equals(useExistingConn)) {
		List< ? extends INode> nodes =  node.getProcess().getNodesOfType("tGSConnection");
		for (INode ne : nodes) {
			if (connection.equals(ne.getUniqueName())) {
				authType = ElementParameterParser.getValue(ne, "__AUTH_TYPE__");
        break;
			}
		}
	}

if ("USER_ACCOUNT_HMAC".equals(authType)){
	%>
	org.jets3t.service.impl.rest.httpclient.GoogleStorageService service_<%=cid%> = null;
	try {
	<%
	if(("true").equals(useExistingConn)) {
		%>
		service_<%=cid%> = (org.jets3t.service.impl.rest.httpclient.GoogleStorageService)globalMap.get("service_<%=connection%>");
		<%
		if(isLog4jEnabled){
		%>
			log.info("<%=cid%> - Get an free connection from " + "<%=connection%>" + ".");
		<%
		}
	}else{
	%>

       <%
       String passwordFieldName = "__SECRET_KEY__";
       final String GoogleTracker = org.talend.core.utils.TrackerUtil.getGoogleTracker();
       %>

	   <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

		org.jets3t.service.security.GSCredentials credentials_<%=cid%> = new org.jets3t.service.security.GSCredentials(<%=accessKey%>,decryptedPassword_<%=cid%>);

		service_<%=cid%> = new org.jets3t.service.impl.rest.httpclient.GoogleStorageService(credentials_<%=cid%>," <%=GoogleTracker%>",null);
		service_<%=cid%>.getAccountOwner();
		<%
		}
		if(!isSpecialConfig){
		%>
			service_<%=cid%>.createBucket(<%=bucketName%>);
		<%
		}else{
		%>
			service_<%=cid%>.createBucket(<%=bucketName%>,org.jets3t.service.model.GSBucket.<%=location%>,
				<%if("NONE".endsWith(acl)){%>null<%}else{%>org.jets3t.service.acl.AccessControlList.<%=acl%><%}%>,<%=projectID%>);
		<%
		}
		%>
	}catch(org.jets3t.service.ServiceException e_<%=cid%>) {
		<%
		if (("true").equals(dieOnError)) {
		%>
			throw(e_<%=cid%>);
		<%
		} else {
			if(isLog4jEnabled){
			%>
				log.error("<%=cid%> - Exception in component <%=cid%>:" + e_<%=cid%>.getMessage());
			<%
			}
			%>
			System.err.println("Exception in component <%=cid%>:");
			System.err.println(e_<%=cid%>.getMessage());
			if(e_<%=cid%>.getErrorCode()!=null){
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - " + e_<%=cid%>.getErrorCode());
				<%
				}
				%>
				System.err.println(e_<%=cid%>.getErrorCode());
			}
			if(e_<%=cid%>.getErrorMessage()!=null){
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - " + e_<%=cid%>.getErrorMessage());
				<%
				}
				%>
				System.err.println(e_<%=cid%>.getErrorMessage());
			}
		<%
		}
		if(!("true").equals(useExistingConn)) {
		%>
			}finally{
				if(service_<%=cid%> !=null){
					service_<%=cid%>.shutdown();
				}

		<%
		}
		%>
	}
<% } else {
  String gsProjectID=ElementParameterParser.getValue(node,"__GS_PROJECT_ID__");
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/googleStorageConnection.javajet"%>
    com.google.cloud.storage.BucketInfo bucketInfo_<%=cid%> = com.google.cloud.storage.BucketInfo.newBuilder(<%=bucketName%>)
<% if(isSpecialConfig && locationForServiceAccount != null && !"DEFAULT".equals(locationForServiceAccount)){ %> .setLocation("<%=locationForServiceAccount%>")<% } %>
        .build();

    com.google.cloud.storage.Storage.PredefinedAcl acl_<%=cid%> =
  <% if ("REST_CANNED_PUBLIC_READ_WRITE".equals(acl)) { %>
        com.google.cloud.storage.Storage.PredefinedAcl.PUBLIC_READ_WRITE;
  <% } else if ("REST_CANNED_AUTHENTICATED_READ".equals(acl)) { %>
        com.google.cloud.storage.Storage.PredefinedAcl.AUTHENTICATED_READ;
  <% } else if ("REST_CANNED_PUBLIC_READ".equals(acl)) { %>
        com.google.cloud.storage.Storage.PredefinedAcl.PUBLIC_READ;
  <% } else { %>
        com.google.cloud.storage.Storage.PredefinedAcl.PRIVATE;
  <% } %>

		com.google.cloud.storage.Storage.BucketTargetOption bucketTargetOption_<%=cid%> =
		com.google.cloud.storage.Storage.BucketTargetOption.predefinedAcl(acl_<%=cid%>);
		storage_<%=cid%>.create(bucketInfo_<%=cid%>, bucketTargetOption_<%=cid%>);
<%
}
%>
